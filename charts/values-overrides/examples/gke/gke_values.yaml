CaddyResources: {}  # Resources for the Caddy pod
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 500m
  #   memory: 500Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


DaskSchedulerResources: {}  # Resources for the Dask Scheduler pod
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 500m
  #   memory: 1Gi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


DaskWorkerResources: # Resources for the Dask worker pod
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 3000m
  #   memory: 4Gi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  # limits:
  #   nvidia.com/gpu: 1


ForgeETLResources: {}  # Resources for the Forge Etl pod
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 1000m
  #   memory: 1Gi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


ForgeETLPythonResources:  # Resources for the Forge ETL python pod
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 3000m
  #   memory: 4Gi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  # limits:
  #   nvidia.com/gpu: 1


GAKResources: {}  # Resources for the graph app kit pods
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 2000m
  #   memory: 4Gi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


NexusResources: {}  # Resources for the nexus pod
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 2000m
  #   memory: 400Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


NginxResources: {}  # Resources for the nginx pod
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 500m
  #   memory: 500Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

InitContainerResources: {}  # Resources for the notebook pod
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 3000m
  #   memory: 4Gi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


NotebookResources: {}  # Resources for the notebook pod
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 3000m
  #   memory: 4Gi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

PivotResources: {}  # Resources for the pivot pod
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 2000m
  #   memory: 2Gi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


RedisResources: {}  # Resources for the redis pod
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 1000m
  #   memory: 100Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


StreamglGpuResources: # Resources for the streamgl gpu pod
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 2000m
  #   memory: 2Gi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  #limits:
  #  nvidia.com/gpu: 1


StreamglSessionsResources: {}  # Resources for the streamgl sessions pod
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 500m
  #   memory: 400Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


StreamglVgraphResources: {}  # Resources for the streamgl vgraph etl pod
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 1000m
  #   memory: 500Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


StreamglVizResources: {}  # Resources for the streamgl viz pod
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 3000m
  #   memory: 4Gi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

cuda:
  version: "11.8" #cuda version

global:  ## global settings for all charts
  tag: v2.41.10
  logs: #change log levels
      LogLevel: DEBUG #log level for the application
      GraphistryLogLevel: DEBUG #log level for graphistry
  ENABLE_OPEN_TELEMETRY: true

# Graphistry Telemetry values and environment variables for observability tools
# can be set like helm upgrade -i chart_name --name release_name \
#--set stENVPublic.LOG_LEVEL="FOO"
# Telemetry documentation:
# https://github.com/graphistry/graphistry-cli/blob/master/docs/tools/telemetry.md#kubernetes-deployment
telemetryEnv:
  OTEL_CLOUD_MODE: false   # false: deploy our stack: jaeger, prometheus, grafana etc.; else fill OTEL_COLLECTOR_OTLP_HTTP_ENDPOINT and credentials bellow
  openTelemetryCollector:
    image: "otel/opentelemetry-collector-contrib:0.87.0"
    OTEL_COLLECTOR_OTLP_HTTP_ENDPOINT: ""   # e.g. Grafana OTLP HTTP endpoint for Graphistry Hub https://otlp-gateway-prod-us-east-0.grafana.net/otlp
    OTEL_COLLECTOR_OTLP_USERNAME: ""   # e.g. Grafana Cloud Instance ID for OTLP
    OTEL_COLLECTOR_OTLP_PASSWORD: ""   # e.g. Grafana Cloud API Token for OTLP
  grafana:
    image: "grafana/grafana:11.0.0"
    GF_SERVER_ROOT_URL: "/grafana"
    GF_SERVER_SERVE_FROM_SUB_PATH: "true"
  dcgmExporter:
    image: "nvcr.io/nvidia/k8s/dcgm-exporter:3.3.5-3.4.1-ubuntu22.04"
    DCGM_EXPORTER_CLOCK_EVENTS_COUNT_WINDOW_SIZE: 1000  # milliseconds
  jaeger:
    image: "jaegertracing/all-in-one:1.50.0"
  nodeExporter:
    image: "prom/node-exporter:v1.8.2"
  prometheus:
    image: "prom/prometheus:v2.47.2"

#environment variables 
 # can be set like helm install chart_name --name release_name \
 #--set env.DBUser="FOO" --set env.DBPassword="BAR"
env: #environment variables
 - name: HOST
   value: 0.0.0.0
 - name: AUTH_LDAP_BIND_PASSWORD
   value: abc123xyz
 - name: DJANGO_SECRET_KEY
   value: abc123xyz
 - name: LEGACY_API_KEY_CANARY
   value: abc123xyz
 - name: LEGACY_API_KEY_SECRET
   value: abc123xyz
 - name: DASK_DISTRIBUTED__WORKER__DAEMON
   value: "False"
 - name: CHUNK_DASK_CUDF_ROWS
   value: "500000"
 - name: DASK_CSV_BLOCKSIZE
   value: 64 MiB
 - name: DASK_CUDF_CSV_CHUNKSIZE
   value: 64 MiB
 - name: REMOTE_DASK_DIAGNOSTICS
   value: dask-scheduler:8787
 - name: AIR_GAPPED
   value: "0"
 - name: PIVOT_PORT 
   value: "8080"
 - name: PORT
   value: "8080"
 - name: NODE_NO_WARNINGS
   value: "1"
 - name: USE_LOCAL_USER
   value: "false"
 - name: NODE_OPTIONS
   value: --max-old-space-size=64000 --stack-trace-limit=20
 - name: NODE_REDIS_URL
   value: redis://redis:6379
 - name: NODE_TLS_REJECT_UNAUTHORIZED
   value: "0"
 - name: CELERY_FLOWER_PASSWORD
   value: JPkK3b2ihuwAGLJ8AjE3aNRmEEvYm5jyCTVlqDbRzzOAMrZhyzJ3SfgnQZMrBBCw
 - name: CELERY_FLOWER_USER
   value: ATZpVOzzQgESuKVmUYQDoJwNqjvueLoP
 - name: DJANGO_ADMIN_URL
   value: admin/
 - name: DJANGO_ALLOWED_HOSTS
   value: '*'
 - name: DJANGO_SECURE_SSL_REDIRECT
   value: "False"
 - name: GOOGLE_ANALYTICS_ID
   value: UA-59712214-2
 - name: IS_SIGNUPS_OPEN_AFTER_FIRST_DEFAULT
   value: "false"
 - name: IS_SOCIAL_AUTH_GITHUB_OPEN_DEFAULT
   value: "false"
 - name: IS_SOCIAL_AUTH_GOOGLE_OPEN_DEFAULT
   value: "false"
 - name: JWT_AUTH_COOKIE
   value: graphistry_jwt
 - name: REDIS_URL
   value: redis://redis:6379/0
 - name: USE_DOCKER
   value: "yes"
 - name: PIVOT_CONFIG_FILES
   value: /opt/graphistry/apps/core/pivot/data/config/config.json
 - name: CLEAR_LOCAL_DATASET_CACHE_ON_STARTUP
   value: "false"
 - name: CLEAR_LOCAL_SESSION_CACHE_ON_STARTUP
   value: "true"
 - name: FORGE_ETL_HOSTNAME
   value: nginx
 - name: FORGE_ETL_PATH
   value: /api/v1/etl/
 - name: FORGE_ETL_PORT
   value: "80"
 - name: GRAPH_PLAY_TIMEOUTMS
   value: "60000"
 - name: LOCAL_DATASET_CACHE
   value: "true"
 - name: LOCAL_DATASET_CACHE_DIR
   value: /opt/graphistry/data
 - name: LOCAL_SESSIONS_CACHE_DIR
   value: /opt/graphistry/data
 - name: LOCAL_WORKBOOK_CACHE
   value: "true"
 - name: LOCAL_WORKBOOK_CACHE_DIR
   value: /opt/graphistry/data
 - name: NGINX_HOST
   value: nginx
 - name: PM2_MAX_WORKERS
   value: "4"
 - name: STREAMGL_CPU_NUM_WORKERS
   value: "4"
 - name: STREAMGL_INACTIVITY_TIMEOUT_MS
   value: "30000"
 - name: STREAMGL_NUM_WORKERS
   value: "4"
 - name: UPLOAD_MAX_SIZE
   value: 1G
 - name: ZIPKIN_ENABLED
   value: "false"
 - name: ACME_AGREE
   value: "true"

##streamlit environment variables
 ## can be set like helm upgrade -i  chart_name --name release_name \
 ##--set stENVPublic.LOG_LEVEL="FOO" 
#streamlitEnv: #graph-app-kit (streamlit) environment variables
 #- name: LOG_LEVEL
   #value: TRACE
 #- name: BASE_PATH
   #value: dashboard/
 #- name: BASE_URL
   #value: "http://localhost:8501/dashboard"
 #- name: FAVICON_URL
   #value: "https://hub.graphistry.com/pivot/favicon/favicon.ico"
 #- name: USE_DOCKER
   #value: "True"
 #- name: ST_PUBLIC_PORT
   #value: 8501
 #- name: GRAPH_VIEWS
   #value: "/apps/views"
 #- name: COMPOSE_PROJECT_NAME
   #value: 
 #- name: VERSION_BASE
   #value: "v2.32.4"
 #- name: NEPTUNE_READER_PROTOCOL
   #value: 
 #- name: NEPTUNE_READER_HOST
   #value: 
 #- name: NEPTUNE_READER_PORT
   #value: 
 #- name: NEPTUNE_KEY_PATH
   #value: 
 #- name: NEPTUNE_TUNNEL_HOST
   #value: 
 #- name: NEPTUNE_TUNNEL_USER
   #value:  
 #- name: TIGERGRAPH_HOST
   #value: 
 #- name: TIGERGRAPH_USERNAME
   #value: 
 #- name: TIGERGRAPH_PASSWORD
   #value: 
 #- name: TIGERGRAPH_GRAPHNAME
   #value: 
 #- name: TIGERGRAPH_SECRET
   #value: 
