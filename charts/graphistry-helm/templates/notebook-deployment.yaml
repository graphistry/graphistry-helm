{{ if eq .Values.devMode false }}

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    autoheal: "true"
    kompose.cmd: kompose --file ./compose/release.yml convert -c
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: notebook
  name: notebook
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: notebook
  strategy:
{{ if eq .Values.rollingUpdate true }}
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{.Values.maxSurge}}
      maxUnavailable: "0%"
{{ else }}
    type: Recreate
{{- end }}
  template:
    metadata:
      annotations:
        autoheal: "true"
        kompose.cmd: kompose --file ./compose/release.yml convert -c
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.network/grph: "true"
        io.kompose.service: notebook
    spec:
      initContainers:
      - name: "{{ .Chart.Name }}-init"
        image: "groundnuty/k8s-wait-for:latest"
        imagePullPolicy: {{.Values.imagePullPolicy }} 
        args: 
        - "job"
        - "nexus-migration-job-{{ .Release.Revision}}"
      containers:
        - env:
   {{- range .Values.env }}
          - name: {{ .name  }}
            value: {{ .value | quote }}
   {{- end }}
          image: {{.Values.azurecontainerregistry.name}}/{{.Values.graphistry}}:{{.Values.notebook.repository}}-{{.Values.tag}}-{{.Values.cuda.version}}
          imagePullPolicy: {{.Values.imagePullPolicy }}          
          livenessProbe:
            exec:
              command:
                - sh 
                - -c 
                - 'curl -f -s -o /dev/null http://localhost:8888/notebook/api'
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 120
            timeoutSeconds: 30
          name: notebook
          ports:

            - containerPort: 8888
          resources: {}
          volumeMounts:
            - mountPath: /home/graphistry/notebooks
              subPath: notebooks
              name: data-mount
            - mountPath: /home/graphistry/dask-shared
              subPath: dask-shared
              name: data-mount
            - mountPath: /opt/graphistry/data
              subPath: data
              name: data-mount
            - mountPath: /home/graphistry/graph-app-kit-public/
              name: gak-public
            - mountPath: /home/graphistry/graph-app-kit-private/
              name: gak-private
            
      restartPolicy: {{ .Values.restartPolicy }}
      serviceAccountName: job-robot
      volumes:
        - name: data-mount
          persistentVolumeClaim:
            claimName: data-mount
        - name: gak-public
          persistentVolumeClaim:
            claimName: gak-public
        - name: gak-private
          persistentVolumeClaim:
            claimName: gak-private
      imagePullSecrets:
          - name: {{ .Values.imagePullSecrets }}  
{{ if eq .Values.multiNode false }}
      nodeSelector: {{- .Values.nodeSelector | toYaml | nindent 8 }}
{{- end }} 
status: {}


---
#service
apiVersion: v1
kind: Service
metadata:
  annotations:
    autoheal: "true"
    kompose.cmd: kompose --file ./compose/release.yml convert -c
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: notebook
  name: notebook
spec:
  ports:
    - name: "8888"
      port: 8888
      targetPort: 8888
  selector:
    io.kompose.service: notebook
status:
  loadBalancer: {}

{{- end }}