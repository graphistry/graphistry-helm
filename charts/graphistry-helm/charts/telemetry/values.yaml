InitContainerResources: {}  # Resources for the notebook pod
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 3000m
  #   memory: 4Gi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

#ingress management - determines if ingress is going to be on internal load balancer 
ingress:
  management:
    annotations: #ingress management - determines if ingress is going to be on internal load balance
      #service.beta.kubernetes.io/azure-load-balancer-internal: "true"
      #cloud.google.com/load-balancer-type: "Internal"
      #service.beta.kubernetes.io/aws-load-balancer-internal: "true"

ProxyBodySize: 20000m #sets the proxy body size for ingress controller and uploads to 20 GB

#domain - set to  the node external ip
#example: 18.116.94.149.nip.io - graphistry.18.116.94.149.nip.io
domain: #domain - set to a domain of your choosing

#set tlsStaging to true to enable tls staging
tlsStaging: false #set tlsStaging to true to enable use of LetsEncrypt staging environment

#set tls to true to enable tls in production
tls: false #set tls to true to enable use of LetsEncrypt TLS


#telemetry environment variables
# can be set like helm upgrade -i chart_name --name release_name \
#--set stENVPublic.LOG_LEVEL="FOO"
# Telemetry documentation:
# https://github.com/graphistry/graphistry-cli/blob/master/docs/tools/telemetry.md#kubernetes-deployment
telemetryEnv:
  OTEL_CLOUD_MODE: false   # false: deploy our stack: jaeger, prometheus, grafana etc.; else fill OTEL_COLLECTOR_OTLP_HTTP_ENDPOINT and credentials bellow
  OTEL_COLLECTOR_OTLP_HTTP_ENDPOINT: ""   # e.g. Grafana OTLP HTTP endpoint for Graphistry Hub https://otlp-gateway-prod-us-east-0.grafana.net/otlp
  OTEL_COLLECTOR_OTLP_USERNAME: ""   # e.g. Grafana Cloud Instance ID for OTLP
  OTEL_COLLECTOR_OTLP_PASSWORD: ""   # e.g. Grafana Cloud API Token for OTLP
  DCGM_EXPORTER_CLOCK_EVENTS_COUNT_WINDOW_SIZE: 1000
  GF_SERVER_ROOT_URL: "/grafana"
  GF_SERVER_SERVE_FROM_SUB_PATH: "true"
  dcgmExporter:
    image: "nvcr.io/nvidia/k8s/dcgm-exporter:3.3.5-3.4.1-ubuntu22.04"
  grafana:
    image: "grafana/grafana:11.0.0"
  jaeger:
    image: "jaegertracing/all-in-one:1.50.0"
  nodeExporter:
    image: "prom/node-exporter:v1.8.2"
  opentelemetryCollector:
    image: "otel/opentelemetry-collector-contrib:0.87.0"
  prometheus:
    image: "prom/prometheus:v2.47.2"

#environment variables 
 # can be set like helm install chart_name --name release_name \
 #--set env.DBUser="FOO" --set env.DBPassword="BAR"
# env: #environment variables
#  - name: 
#    value: ""
