{{ if eq .Values.telemetryEnv.ENABLE_OPEN_TELEMETRY true }}
  {{ if eq .Values.telemetryEnv.OTEL_CLOUD_MODE false }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: {{ .Release.Namespace }}
  annotations:
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "sessionid"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
    nginx.ingress.kubernetes.io/proxy-body-size: {{ .Values.ProxyBodySize }}
{{- if .Values.tls }}
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-production-{{ .Release.Namespace }}"
    ingress.kubernetes.io/ssl-redirect: "true"
{{- else if eq .Values.tlsStaging true }}
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-staging-{{ .Release.Namespace }}"
    ingress.kubernetes.io/ssl-redirect: "true"
{{- end  }}
{{- if .Values.ingress.management.annotations }}
{{ toYaml .Values.ingress.management.annotations | indent 4 }}
{{- end }}

spec:
  rules:
    - http:
        paths:
          - path: /grafana
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 3000
{{- end }}
{{- end }}
