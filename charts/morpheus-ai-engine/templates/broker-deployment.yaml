# Copyright (c) 2021, NVIDIA CORPORATION.  All rights reserved.
#
# NVIDIA CORPORATION and its licensors retain all intellectual property
# and proprietary rights in and to this software, related documentation
# and any modifications thereto.  Any use, reproduction, disclosure or
# distribution of this software and related documentation without an express
# license agreement from NVIDIA CORPORATION is strictly prohibited.

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: broker
    app.kubernetes.io/instance: {{ .Release.Name }}
  name: broker
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: broker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: broker
    spec:
      # bitnami kafka container image sets 'USER 1001' which
      # creates problems for hostPath or even bind mounts;
      # so set the same UID for the kafka dirs recursively
      initContainers:
      - name: chown-fs
        image: busybox:latest
        command: ['sh', '-c', 'mkdir -p /var/lib/kafka/data && chown -R 1001 /var/lib/kafka/data']
        {{- if .Values.platform.openshift }}
        securityContext:
          privileged: true
        {{- end }}
        volumeMounts:
        - mountPath: /var/lib/kafka/data
          name: kafka-ds-storage
      containers:
      - env:
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        - name: KAFKA_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_DEFAULT_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: INSIDE
        - name: KAFKA_LISTENERS
          value: INSIDE://0.0.0.0:9092
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "INSIDE:PLAINTEXT"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: INSIDE://broker:9092
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_DELETE_TOPIC_ENABLE
          value: "true"
        - name: KAFKA_MESSAGE_MAX_BYTES
          value: "10485760"
        - name: KAFKA_LOG_RETENTION_HOURS
          value: "168"
        - name: KAFKA_LOG_RETENTION_BYTES
          value: "209715200"
        - name: KAFKA_LOG_SEGMENT_BYTES
          value: "20971520"
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "false"
        - name: KAFKA_VOLUME_DIR
          value: "/var/lib/kafka/data"
        image: "{{ .Values.broker.registry }}/{{ .Values.broker.image }}:{{ .Values.broker.version }}"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        name: broker
        ports:
        - containerPort: 9092
          name: client
          protocol: TCP
        - containerPort: 7072
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: "2"
            memory: 2Gi
          requests:
            cpu: 10m
            memory: 1Gi
      {{- if .Values.platform.openshift }}
        securityContext:
          privileged: true
      {{- end }}
        volumeMounts:
        - mountPath: /var/lib/kafka/data
          name: kafka-ds-storage
        - mountPath: /app/lib/prometheus-config
          name: kafka-prometheus-config
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      serviceAccountName: {{ template "morpheus-ai-engine.serviceAccountName" . }}
      volumes:
      - hostPath:
          path: /opt/kafka-broker
          type: "DirectoryOrCreate"
        name: kafka-ds-storage
      - configMap:
          defaultMode: 420
          name: kafka-prometheus-config
        name: kafka-prometheus-config
