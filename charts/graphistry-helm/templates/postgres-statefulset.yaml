{{ if eq .Values.doingdev true }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    autoheal: "true"
    kompose.cmd: kompose --file ./compose/release.yml convert -c
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  updateStrategy:
{{ if eq .Values.rollingUpdate true }}
    type: RollingUpdate
{{ else }}
    type: OnDelete
{{- end }}
  template:
    metadata:
      annotations:
        autoheal: "true"
        kompose.cmd: kompose --file ./compose/release.yml convert -c
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.network/grph: "true"
        io.kompose.service: postgres
    spec:
      containers:
        - env:
   {{- range .Values.env }}
          - name: {{ .name  }}
            value: {{ .value | quote }}
   {{- end }}
          - name: POSTGRES_HOST
            valueFrom: { secretKeyRef: { name: {{.Values.global.postgres.host }}-pguser-{{.Values.global.postgres.user }}, key: host } }
          - name: POSTGRES_PORT
            valueFrom: { secretKeyRef: { name: {{.Values.global.postgres.host }}-pguser-{{.Values.global.postgres.user }}, key: port } }
          - name: POSTGRES_DB
            valueFrom: { secretKeyRef: { name: {{.Values.global.postgres.host }}-pguser-{{.Values.global.postgres.user }}, key: dbname } }
          - name: POSTGRES_USER
            valueFrom: { secretKeyRef: { name: {{.Values.global.postgres.host }}-pguser-{{.Values.global.postgres.user }}, key: user } }
          - name: POSTGRES_PASSWORD
            valueFrom: { secretKeyRef: { name: {{.Values.global.postgres.host }}-pguser-{{.Values.global.postgres.user }}, key: password } }
          - name: DATABASE_URL
            valueFrom: { secretKeyRef: { name: {{.Values.global.postgres.host }}-pguser-{{.Values.global.postgres.user }}, key: uri } }
          - name: GRAPHISTRY_LOG_LEVEL
            value: {{ .Values.global.logs.GraphistryLogLevel | quote }}
          - name: LOG_LEVEL
            value: {{ .Values.global.logs.LogLevel | quote }}  
      {{ if eq .Values.global.devMode false }}
          image: {{.Values.global.containerregistry.name}}/{{.Values.global.graphistry}}:{{.Values.global.postgres.repository}}-{{.Values.global.tag}}-universal
      {{ else }}  
          image: graphistry/{{.Values.global.postgres.repository}}:{{.Values.global.tag}}-universal-dev
      {{ end }}    
          imagePullPolicy: {{.Values.global.imagePullPolicy }}         
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U graphistry
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: postgres
          ports:
            - containerPort: {{.Values.global.postgres.port}}
              name: postgres
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
              subPath: data
            - mountPath: /backups
              name: postgres-data
            - mountPath: /var/graphistry/postgres
              name: postgres-data
            - mountPath: /opt/graphistry/data
              name: data-mount
      restartPolicy: {{ .Values.global.restartPolicy }}
      serviceAccountName: job-robot
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data
        - name: data-mount
          persistentVolumeClaim:
            claimName: data-mount
      imagePullSecrets:
          - name: {{ .Values.global.imagePullSecrets }}    
{{ if eq .Values.global.multiNode false }}
      nodeSelector: {{- .Values.global.nodeSelector | toYaml | nindent 8 }}
{{- end }}    
status:
  replicas: 1
  availableReplicas: 1
---
#service
apiVersion: v1
kind: Service
metadata:
  annotations:
    autoheal: "true"
    kompose.cmd: kompose --file ./compose/release.yml convert -c
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: {{.Values.global.postgres.port | quote }}
      port: {{.Values.global.postgres.port}}
      targetPort: {{.Values.global.postgres.port}}
  selector:
    io.kompose.service: postgres
{{- end }}
