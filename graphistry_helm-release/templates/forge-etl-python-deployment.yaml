apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    autoheal: "true"
    kompose.cmd: kompose --file ./compose/release.yml convert -c
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: forge-etl-python
  name: forge-etl-python
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: forge-etl-python
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        autoheal: "true"
        kompose.cmd: kompose --file ./compose/release.yml convert -c
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.network/grph: "true"
        io.kompose.service: forge-etl-python
    spec:
      containers:
        - env:
   {{- range .Values.env }}
          - name: {{ .name  }}
            value: {{ .value | quote }}
   {{- end }}
          image: graphistry/etl-server-python:v2.38.10-11.0 ##{{.Values.azurecontainerregistry.name}}/{{.Values.forgeetlpython.repository}}:{{.Values.tag}}-{{.Values.cuda.version}}
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "curl -f http://localhost:8080/cudfhealth && curl -f http://localhost:8080/blazinghealth"
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 120
            timeoutSeconds: 30
          name: forge-etl-python
          ports:
            - containerPort: 8080
          resources: 
            limits:
              cpu: "4"
              memory: "3000M"
          volumeMounts:
            - mountPath: /opt/graphistry/data
              name: forge-etl-python-claim0
            - mountPath: /opt/graphistry/data/uploads
              name: uploads-files
      restartPolicy: {{ .Values.restartPolicy }}
      volumes:
        - name: forge-etl-python-claim0
          persistentVolumeClaim:
            claimName: forge-etl-python-claim0
        - name: uploads-files
          persistentVolumeClaim:
            claimName: uploads-files
status: {}

---
#service for nginx
apiVersion: v1
kind: Service
metadata:
  annotations:
    autoheal: "true"
    kompose.cmd: kompose --file ./compose/release.yml convert -c
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: forge-etl-python
  name: forge-etl-python
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    io.kompose.service: forge-etl-python
status:
  loadBalancer: {}

---

#volumes

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: forge-etl-python-claim0
  name: forge-etl-python-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
