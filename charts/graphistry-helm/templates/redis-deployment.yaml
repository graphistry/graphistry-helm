{{ if eq .Values.devMode false }}

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    autoheal: "true"
    kompose.cmd: kompose --file ./compose/release.yml convert -c
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: redis
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: redis
  strategy:
{{ if eq .Values.rollingUpdate true }}
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{.Values.maxSurge}}
      maxUnavailable: "0%"
{{ else }}
    type: Recreate
{{- end }}
  template:
    metadata:
      annotations:
        autoheal: "true"
        kompose.cmd: kompose --file ./compose/release.yml convert -c
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.network/grph: "true"
        io.kompose.service: redis
    spec:
      initContainers:
      - name: "{{ lower .Chart.Name }}-init"
        image: "groundnuty/k8s-wait-for:latest"
        imagePullPolicy: {{.Values.imagePullPolicy }} 
        args: 
        - "job"
        - "nexus-migration-job-{{ .Release.Revision}}"
      containers:
        - env:
   {{- range .Values.env }}
          - name: {{ .name  }}
            value: {{ .value | quote }}
   {{- end }}
          - name: POSTGRES_PORT
            value: {{.Values.postgresPort | quote }}
          {{- if eq .Values.containerregistry.name "docker.io/graphistry" }}
          image: {{.Values.redis.repository}}:{{.Values.redis.tag}} #DockerHub
          {{ else }}
          image: {{.Values.containerregistry.name}}/{{.Values.redis.repository}}:{{.Values.redis.tag}}
          {{- end }}
          imagePullPolicy: {{.Values.imagePullPolicy }}         
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            failureThreshold: 3
            periodSeconds: 30
            timeoutSeconds: 10
          name: redis
          ports:
            - containerPort: 6379
          resources: {}
          volumeMounts:
            - mountPath: /opt/graphistry/data
              name: data-mount
      restartPolicy: {{ .Values.restartPolicy }}
      serviceAccountName: job-robot
      volumes:
        - name: data-mount
          persistentVolumeClaim:
            claimName: data-mount
      imagePullSecrets:
          - name: {{ .Values.imagePullSecrets }}  
{{ if eq .Values.multiNode false }}
      nodeSelector: {{- .Values.nodeSelector | toYaml | nindent 8 }}
{{- end }} 
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    autoheal: "true"
    kompose.cmd: kompose --file ./compose/release.yml convert -c
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: redis
  name: redis
spec:
  ports:

    - name: "6379"
      port: 6379
      targetPort: 6379
  selector:
    io.kompose.service: redis
status:
  loadBalancer: {}

{{- end }}
