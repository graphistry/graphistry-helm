{{ if eq .Values.telemetryEnv.ENABLE_OPEN_TELEMETRY true }}
  {{ if eq .Values.telemetryEnv.OTEL_CLOUD_MODE false }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  selector:
    matchLabels:
      io.kompose.service: grafana
  template:
    metadata:
      labels:
        a: "dfd"
        io.kompose.network/grph: "true"
        io.kompose.service: grafana
    spec:
      containers:
        - env:
            - name: NODE_ENV
              value: {{ .Values.nodeEnv | quote }}
          {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
          {{- end }}
            - name: GRAPHISTRY_LOG_LEVEL
              value: {{ .Values.global.logs.GraphistryLogLevel | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.global.logs.LogLevel | quote }}
            - name: GF_SECURITY_ADMIN_USER
              value: "admin"
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "admin"
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
              value: "Admin"
            - name: GF_USERS_ALLOW_SIGN_UP
              value: "false"
            - name: GF_SERVER_ROOT_URL
              value: {{ .Values.telemetryEnv.GF_SERVER_ROOT_URL | quote }}
            - name: GF_SERVER_SERVE_FROM_SUB_PATH
              value: {{ .Values.telemetryEnv.GF_SERVER_SERVE_FROM_SUB_PATH | quote }}
          image: grafana/grafana:11.0.0
          imagePullPolicy: {{ .Values.global.imagePullPolicy | quote }}
          resources:
            limits:
              memory: "500Mi"
              cpu: "500m"
          name: grafana
          ports:
            - containerPort: 3000
          resources:
            {{- toYaml .Values.StreamglVizResources | nindent 12 }}
          volumeMounts:
            - name: grafana-datasources-mount
              mountPath: /etc/grafana/provisioning/datasources
              readOnly: true
            - name: grafana-dashboards-mount
              mountPath: /etc/grafana/provisioning/dashboards
              readOnly: true
      restartPolicy: {{ .Values.global.restartPolicy | quote }}
      serviceAccountName: job-robot
      volumes:
        - name: grafana-dashboards-mount
          configMap:
            name: grafana-configmap
            items:
            - key: dashboard.yml
              path: dashboard.yml
            - key: dcgm-exporter-dashboard.json
              path: dcgm-exporter-dashboard.json
            - key: node-exporter-dashboard.json
              path: node-exporter-dashboard.json
        - name: grafana-datasources-mount
          configMap:
            name: grafana-configmap
            items:
            - key: datasource.yml
              path: datasource.yml
      imagePullSecrets:
        {{- toYaml .Values.global.imagePullSecrets | nindent 8 }}
{{- if eq .Values.global.multiNode false }}
      nodeSelector:
        {{- toYaml .Values.global.nodeSelector | nindent 8 }}
{{- end }}
---
#service
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
  selector:
    io.kompose.service: grafana
status:
  loadBalancer: {}
  {{- end }}
{{- end }}
