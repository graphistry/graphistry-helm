domain: eks-skinny.grph.xyz   
tls: true
tlsEmail: "cody@graphistry.com" 
nodeEnv: development 
appEnvironment: development 
djangoSettingsModule: "config.settings.dev" 
graphistryCPUMode: "1" 
djangoDebug: "True"
httpTesting: true


  ## createServiceAccount: true only true on initial deployment
k8sDashboard:
  k8sDashboard: 
    enabled: true
    readonly: false
    createServiceAccount: false

#example values.yaml of an aws eks based deployment


grafana:
  grafana.ini:
      server:
        domain: eks-dev.grph.xyz
        root_url: https://eks-dev.grph.xyz/k8s/grafana
        serve_from_sub_path: true
      auth.anonymous:
        enabled: true

prometheus:
  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false

graphistry-helm-resources:
  storageClassParameters:
      csi.storage.k8s.io/fstype: ext4
      type: gp2

ingress-nginx:
  controller:
    metrics:
      enabled: true 
      serviceMonitor:
        enabled: true 
        additionalLabels:
          release: "prometheus"



cert-manager: #defined by either the name or alias of your dependency in Chart.yaml
  namespace: cert-manager
  installCRDs: true
  createCustomResource: true
      
      
global:
  provisioner: ebs.csi.aws.com
  imagePullPolicy: Always
  containerregistry:
    name: docker.io/graphistry

  imagePullSecrets: 
    - name: dockerhub-secret
  logs:
    LogLevel: INFO
    GraphistryLogLevel: INFO
  tag: v2.39.28-admin
  devMode: true 
#helm upgrade -i g-chart ./charts/graphistry-helm --values ./charts/graphistry-helm/skinny-values.yaml --set tag=v2.39.17-koa-sso-new  --namespace graphistry --create-namespace