{{ if eq .Values.graphAppKitPublic true }}

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    autoheal: "true"
    kompose.cmd: kompose --file ./compose/release.yml convert -c
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: graph-app-kit-public
  name: graph-app-kit-public
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: graph-app-kit-public
  strategy:
{{ if eq .Values.rollingUpdate true }}
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.maxSurge }}
      maxUnavailable: "0%"
{{ else }}
    type: Recreate
{{- end }}
  template:
    metadata:
      annotations:
        autoheal: "true"
        kompose.cmd: kompose --file ./compose/release.yml convert -c
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.network/grph: "true"
        io.kompose.service: graph-app-kit-public
    spec:
      initContainers:
      - name: "{{ .Chart.Name }}-init"
        image: "groundnuty/k8s-wait-for:latest"
        imagePullPolicy: {{.Values.imagePullPolicy }} 
        args: 
        - "job"
        - "nexus-migration-job-{{ .Release.Revision}}"
      - name: graph-app-kit-init
        #image: acrgraphistryk8s.azurecr.io/graphistry/graph-app-kit-st:development
        image: {{.Values.azurecontainerregistry.name}}/{{.Values.graphAppKit.repository}}:{{.Values.graphAppKit.tag}}-{{.Values.cuda.version}}
        command: ["/bin/sh","-c"]
        args: ['if [ ! -d "/opt/public/views" ]; then cp -r /apps/views /opt/public/views; else echo "Error: Directory /opt/public/views exists."; fi && if [ ! -d "/opt/public/css" ]; then cp -r /apps/css /opt/public/css; else echo "Error: Directory /opt/public/css exists."; fi && if [ ! -d "/opt/public/util" ]; then cp -r /apps/util /opt/public/util; else echo "Error: Directory /opt/public/util exists."; fi && chmod -R 777 /opt/public/ {{ if eq .Values.graphAppKitPrivate true }} && if [ ! -d "/opt/private/views" ]; then cp -r /apps/views /opt/private/views; else echo "Error: Directory /opt/private/views exists."; fi && if [ ! -d "/opt/private/css" ]; then cp -r /apps/css /opt/private/css; else echo "Error: Directory /opt/private/css exists."; fi && if [ ! -d "/opt/private/util" ]; then cp -r /apps/util /opt/private/util; else echo "Error: Directory /opt/private/util exists."; fi && chmod -R 777 /opt/private/ {{- end }}']
        volumeMounts:
        - name: gak-public
          mountPath: /opt/public/
        - name: gak-private
          mountPath: /opt/private/        

      containers:
        - env:
   {{- range .Values.stENVPublic }}
          - name: {{ .name  }}
            value: {{ .value | quote }}
   {{- end }}
          #image: acrgraphistryk8s.azurecr.io/graphistry/graph-app-kit-st:development
          image: {{.Values.azurecontainerregistry.name}}/{{.Values.graphAppKit.repository}}:{{.Values.graphAppKit.tag}}-{{.Values.cuda.version}}
          imagePullPolicy: {{.Values.imagePullPolicy }}
          livenessProbe:
            exec:
              command:
                - sh 
                - -c 
                - 'curl -Lf http://localhost:8501/dashboard/healthz'

          name: graph-app-kit-public
          ports:
            - containerPort: 8501
          resources: {}
          volumeMounts:
            - mountPath: /apps/css
              subPath: css
              name: gak-public
            - mountPath: /apps/util
              subPath: util
              name: gak-public
            - mountPath: /apps/views
              subPath: views
              name: gak-public
{{ if eq .Values.graphAppKitPrivate true }}
#graph-app-kit-private
        - env:
   {{- range .Values.stENVPrivate }}
          - name: {{ .name  }}
            value: {{ .value | quote }}
   {{- end }}
          #image: acrgraphistryk8s.azurecr.io/graphistry/graph-app-kit-st:development
          image: {{.Values.azurecontainerregistry.name}}/{{.Values.graphAppKit.repository}}:{{.Values.graphAppKit.tag}}-{{.Values.cuda.version}}
          imagePullPolicy: {{.Values.imagePullPolicy }}
          livenessProbe:
            exec:
              command:
                - sh 
                - -c 
                - 'curl -Lf http://localhost:8501/dashboard/healthz'

          name: graph-app-kit-private
          ports:
            - containerPort: 8501
          resources: {}
          volumeMounts:
            - mountPath: /apps/css
              subPath: css
              name: gak-private
            - mountPath: /apps/util
              subPath: util
              name: gak-private
            - mountPath: /apps/views
              subPath: views
              name: gak-private
{{- end }}           
####
      restartPolicy: {{ .Values.restartPolicy }}
      serviceAccountName: job-robot
      volumes:
        - name: gak-public
          persistentVolumeClaim:
            claimName: gak-public
        - name: gak-private
          persistentVolumeClaim:
            claimName: gak-private
      imagePullSecrets:
          - name: {{ .Values.imagePullSecrets }}    
{{ if eq .Values.multiNode false }}
      nodeSelector: {{- .Values.nodeSelector | toYaml | nindent 8 }}
{{- end }} 
status: {}


---
#service
apiVersion: v1
kind: Service
metadata:
  annotations:
    autoheal: "true"
    kompose.cmd: kompose --file ./compose/release.yml convert -c
    kompose.version: 1.26.0 (40646f47)
  labels:
    io.kompose.service: graph-app-kit-public
  name: graph-app-kit-public
spec:
  ports:
    - name: "8501"
      port: 8501
      targetPort: 8501
  selector:
    io.kompose.service: graph-app-kit-public
{{- end }}
---
#service
{{ if eq .Values.graphAppKitPrivate true }}
apiVersion: v1
kind: Service
metadata:
  annotations:
    autoheal: "true"
    kompose.cmd: kompose --file ./compose/release.yml convert -c
    kompose.version: 1.26.0 (40646f47)
  labels:
    io.kompose.service: graph-app-kit-private
  name: graph-app-kit-private
spec:
  ports:
    - name: "8501"
      port: 8501
      targetPort: 8501
  selector:
    io.kompose.service: graph-app-kit-public
{{- end }}
