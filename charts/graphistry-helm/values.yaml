#node selector to determine which node to deploy cluster to
nodeSelector: {"accelerator": "nvidia"}
#--set nodeSelector."accelerator"=nvidia
#{"kubernetes.io/hostname": "ip-172-31-32-176.us-east-2.compute.internal"}
#--set nodeSelector."kubernetes\\.io/hostname"=ip-172-31-7-234.us-east-2.compute.internal

#ingress management - determines if ingress is going to be on internal load balancer 
ingress:
  management:
    annotations:
      #service.beta.kubernetes.io/azure-load-balancer-internal: "true"
      #cloud.google.com/load-balancer-type: "Internal"
      #service.beta.kubernetes.io/aws-load-balancer-internal: "true"

# multinode selector switch to determine if going multi/single node
multiNode: false

# rolling update deployment strategy switch (postgres and nexus are exempt)
rollingUpdate: false

#restart policy
restartPolicy: Always

#azure container registry name
azurecontainerregistry:
  name: acrgraphistryk8s.azurecr.io

#image pull secrets name
imagePullSecrets: acr-secret

#image pull policy
imagePullPolicy: IfNotPresent #could also be Always

#cuda version
cuda:
  version: "11.0"

#tag for the docker image
tag: latest

#graphitry tag for the docker image
graphistry: graphistry

#caddy repository name
caddy:
  repository: caddy


#redis repository name and tag
redis:
  repository: redis
  tag: 6.0.5

#postgres repository name 
postgres:
  repository: graphistry-postgres


#streamgl-viz repository name 
streamglviz:
  repository: streamgl-viz


#nginx repository name 
nginx:
  repository: streamgl-nginx


#streamgl-vgraph-etl repository name 
streamglvgraph:
  repository: streamgl-vgraph-etl


#streamgl-gpu repository name 
streamglgpu:
  repository: streamgl-gpu


#streamgl-sessions repository name
streamglsessions:
  repository: streamgl-sessions


#graphistry pivot repository name 
pivot:
  repository: graphistry-pivot


#jupyter notebook repository name 
notebook:
  repository: jupyter-notebook


#graphistry nexus repository name 
nexus:
  repository: graphistry-nexus


#forge-etl-python repository name 
forgeetlpython:
  repository: etl-server-python


#forge-etl repository name 
forgeetl:
  repository: etl-server


#dask-scheduler repository name 
daskscheduler:
  repository: etl-server-python


#dask-cuda-worker repository name 
daskcudaworker:
  repository: etl-server-python

#environment variables 
env:
 - name: HOST
   value: 0.0.0.0
 - name: AUTH_LDAP_BIND_PASSWORD
   value: abc123xyz
 - name: DJANGO_SECRET_KEY
   value: abc123xyz
 - name: LEGACY_API_KEY_CANARY
   value: abc123xyz
 - name: LEGACY_API_KEY_SECRET
   value: abc123xyz
 - name: DASK_DISTRIBUTED__WORKER__DAEMON
   value: "False"
 - name: CHUNK_DASK_CUDF_ROWS
   value: "500000"
 - name: DASK_CSV_BLOCKSIZE
   value: 64 MiB
 - name: DASK_CUDF_CSV_CHUNKSIZE
   value: 64 MiB
 - name: FORGE_NUM_WORKERS
   value: "4"
 - name: GRAPHISTRY_CPU_MODE
   value: "0"
 - name: REMOTE_DASK
   value: dask-scheduler:8786
 - name: REMOTE_DASK_DIAGNOSTICS
   value: dask-scheduler:8787
 - name: AIR_GAPPED
   value: "0"
 - name: APP_ENVIRONMENT
   value: production
 - name: GRAPHISTRY_LOG_LEVEL
   value: INFO
 - name: LOG_LEVEL
   value: INFO
 - name: NODE_ENV
   value: production
 - name: PIVOT_PORT 
   value: "8080"
 - name: PORT
   value: "8080"
 - name: NODE_NO_WARNINGS
   value: "1"
 - name: USE_LOCAL_USER
   value: "false"
 - name: NODE_OPTIONS
   value: --max-old-space-size=64000 --stack-trace-limit=20
 - name: NODE_REDIS_URL
   value: redis://redis:6379
 - name: NODE_TLS_REJECT_UNAUTHORIZED
   value: "0"
 - name: CELERY_FLOWER_PASSWORD
   value: JPkK3b2ihuwAGLJ8AjE3aNRmEEvYm5jyCTVlqDbRzzOAMrZhyzJ3SfgnQZMrBBCw
 - name: CELERY_FLOWER_USER
   value: ATZpVOzzQgESuKVmUYQDoJwNqjvueLoP
 - name: DJANGO_ADMIN_URL
   value: admin/
 - name: DJANGO_ALLOWED_HOSTS
   value: '*'
 - name: DJANGO_DEBUG
   value: "False"
 - name: DJANGO_SECURE_SSL_REDIRECT
   value: "False"
 - name: DJANGO_SETTINGS_MODULE
   value: config.settings.production
 - name: GOOGLE_ANALYTICS_ID
   value: UA-59712214-2
 - name: IS_SIGNUPS_OPEN_AFTER_FIRST_DEFAULT
   value: "false"
 - name: IS_SOCIAL_AUTH_GITHUB_OPEN_DEFAULT
   value: "false"
 - name: IS_SOCIAL_AUTH_GOOGLE_OPEN_DEFAULT
   value: "false"
 - name: JWT_AUTH_COOKIE
   value: graphistry_jwt
 - name: REDIS_URL
   value: redis://redis:6379/0
 - name: USE_DOCKER
   value: "yes"
 - name: PIVOT_CONFIG_FILES
   value: /opt/graphistry/apps/core/pivot/data/config/config.json
 - name: DATABASE_URL
   value: postgres://graphistry:password@postgres:5432/graphistry
 - name: POSTGRES_DB
   value: graphistry
 - name: POSTGRES_HOST
   value: postgres
 - name : POSTGRES_PASSWORD
   value: password
 - name: POSTGRES_PORT
   value: "5432"
 - name: POSTGRES_USER
   value: graphistry
 - name: CLEAR_LOCAL_DATASET_CACHE_ON_STARTUP
   value: "false"
 - name: CLEAR_LOCAL_SESSION_CACHE_ON_STARTUP
   value: "true"
 - name: FORGE_ETL_HOSTNAME
   value: nginx
 - name: FORGE_ETL_PATH
   value: /api/v1/etl/
 - name: FORGE_ETL_PORT
   value: "80"
 - name: GRAPH_PLAY_TIMEOUTMS
   value: "60000"
 - name: LOCAL_DATASET_CACHE
   value: "true"
 - name: LOCAL_DATASET_CACHE_DIR
   value: /opt/graphistry/data
 - name: LOCAL_SESSIONS_CACHE_DIR
   value: /opt/graphistry/data
 - name: LOCAL_WORKBOOK_CACHE
   value: "true"
 - name: LOCAL_WORKBOOK_CACHE_DIR
   value: /opt/graphistry/data
 - name: NGINX_HOST
   value: nginx
 - name: PM2_MAX_WORKERS
   value: "4"
 - name: STREAMGL_CPU_NUM_WORKERS
   value: "4"
 - name: STREAMGL_INACTIVITY_TIMEOUT_MS
   value: "30000"
 - name: STREAMGL_NUM_WORKERS
   value: "4"
 - name: UPLOAD_MAX_SIZE
   value: 1G
 - name: ZIPKIN_ENABLED
   value: "false"
 - name: ACME_AGREE
   value: "true"
 - name: ENABLE_TELEMETRY
   value: "false"