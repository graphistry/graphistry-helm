domain: eks-dev.grph.xyz 
tlsEmail: "cody@graphistry.com" 
tls: true
metrics: false
fwdHeaders: true
volumeName:
  dataMount: pvc-91ac0b15-f7c9-471c-a00d-ab6dfb59885f
  localMediaMount: pvc-89de61bf-2d96-4613-9a24-fb19a93d2c43
  gakPublic: pvc-97b39989-9cfa-4058-b489-fbcab0c3dc7f
  gakPrivate: pvc-9afe0118-e483-4b90-85a5-79a7181071e5


graphistryResources:
  storageClassParameters:
      csi.storage.k8s.io/fstype: ext4
      type: gp2

  ## createServiceAccount: true only true on initial deployment
k8sDashboard:
  enabled: true
  readonly: false
  createServiceAccount: false

#example values.yaml of an aws eks based deployment

grafana:
  grafana.ini:
      server:
        domain: eks-dev.grph.xyz
        root_url: https://eks-dev.grph.xyz/k8s/grafana
        serve_from_sub_path: true
      auth.anonymous:
        enabled: true

prometheus:
  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false

ingress-nginx:
  controller:
    metrics:
      enabled: true 
      serviceMonitor:
        enabled: true 
        additionalLabels:
          release: "prometheus"


cert-manager: #defined by either the name or alias of your dependency in Chart.yaml
  namespace: cert-manager
  installCRDs: true
  createCustomResource: true
      
global:
  provisioner: ebs.csi.aws.com
  tag: v2.39.28-admin
  nodeSelector: {"kubernetes.io/hostname": "ip-172-31-29-0.us-east-2.compute.internal"}
  #change log levels
  #logs:
  #  LogLevel: "TRACE"
  #  GraphistryLogLevel: "TRACE"
  #multinode setting
  #multiNode: true
  imagePullPolicy: Always
  imagePullSecrets: 
    - name: docker-secret-prod
  postgresVolumeLabel: graphistry-postgres
  #dev mode for debugging with nexus, postgres and nginx
  #devMode: true




#helm upgrade -i prom ./charts/kube-prometheus-stack --values ./charts/overrides/internal/eks-dev-values.yaml --namespace prometheus --create-namespace --dry-run
#helm upgrade -i g-chart ./charts/graphistry-helm --values ./charts/overrides/internal/eks-dev-values.yaml --namespace graphistry --create-namespace 
